    mousePos = { x: window.innerWidth / 2, y: window.innerHeight / 2 },
    canvas = document.createElement('canvas'),
    context = canvas.getContext('2d'),
    A = new Dot(0),
    B = new Dot(0),
    maxDist=800;
    dots = [A, B];
    center = { x: 0, y: 0, dist: 0 };
    

//Initialize
$(document).ready(function() {
    document.getElementById('canvas').appendChild(canvas);
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
    A.r=255; A.g=0; A.b=0;    B.r=0; B.g=255; B.b=0; 
    //A.pos.x=721; A.pos.y=57;    B.pos.x=1290; B.pos.y=500;    C.pos.x=254; C.pos.y=500;
    Render(context);
});

//update mouse position
$(document).mousemove(function(e) {
    e.preventDefault();
    mousePos = { x: e.clientX, y: e.clientY	};
});

//Mouse click
$(document).click(function(e) {
	var closest = window.innerWidth + window.innerHeight, index = 0;
	for (var i = 0; i < dots.length; i++) {		
		var distance = Math.sqrt(Math.pow(dots[i].pos.x - mousePos.x, 2) + Math.pow(dots[i].pos.y - mousePos.y, 2));
		if (distance < closest) {
			closest = distance; index = i;
        }
    }
    dots[index].pos.x = mousePos.x;
    dots[index].pos.y = mousePos.y;
    if (window.innerWidth != canvas.width || window.innerHeight != canvas.height) {
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
        //maxDist = Math.sqrt(Math.pow(window.innerWidth, 2) + Math.pow(window.innerHeight, 2)) / maxDiv;
    }

    context.clearRect(0, 0, canvas.width, canvas.height);
    
    Render(context);
});

//Dot class constructor
function Dot(ID) {
    this.pos = { x: Math.round(Math.random() * window.innerWidth), y: Math.round(Math.random() * window.innerHeight) };
    //this.vel = { x: Math.random() * speed * (Math.round(Math.random()) ? 1 : -1), y: 0 };
    //this.vel.y = Math.sqrt(Math.pow(speed, 2) - Math.pow(this.vel.x, 2)) * (Math.round(Math.random()) ? 1 : -1)
    this.r = Math.round(Math.random() * 255);
    this.g = Math.round(Math.random() * 255);
    this.b = Math.round(Math.random() * 255);
    this.id = ID;
    this.ids = new Map();
}

function Render(c) {
      
    center.x = (A.pos.x + B.pos.x) / 2;
    center.y = (A.pos.y + B.pos.y) / 2;
    center.dist = Math.sqrt(Math.pow(A.pos.x-B.pos.x, 2) + Math.pow(A.pos.y-B.pos.y, 2));    
    
    var grd = c.createLinearGradient(A.pos.x, A.pos.y, B.pos.x, B.pos.y),
        s1 = "rgba(" + A.r + "," + A.g + "," + A.b + "," + 1.1 * (1 - (center.dist / maxDist)) + ")",
        s2 = 'rgba(' + B.r + ',' + B.g + ',' + B.b + ',' + 1.1 * (1 - (center.dist / maxDist)) + ')';

        grd.addColorStop(0, s1);
        grd.addColorStop(1, s2);

    c.beginPath();
    c.moveTo(A.pos.x, A.pos.y);

    var Ax2 = Math.cos(Math.PI/2) * (A.pos.x-center.x) - Math.sin(Math.PI/2) * (A.pos.y-center.y) + center.x

    var Ay2 = Math.sin(Math.PI/2) * (A.pos.x-center.x) + Math.cos(Math.PI/2) * (A.pos.y-center.y) + center.y

    var Bx2 = Math.cos(-Math.PI/2) * (A.pos.x-center.x) - Math.sin(-Math.PI/2) * (A.pos.y-center.y) + center.x

    var By2 = Math.sin(-Math.PI/2) * (A.pos.x-center.x) + Math.cos(-Math.PI/2) * (A.pos.y-center.y) + center.y



    c.lineTo(Ax2, Ay2);
    c.lineTo(B.pos.x, B.pos.y);
    c.lineTo(Bx2, By2);
    //c.lineTo(A.pos.x, A.pos.y);
    //c.lineTo(B.pos.x, B.pos.y);
    //c.lineTo(center.x + delta.y, center.y - delta.x);
    //c.lineTo(A.pos.x, A.pos.y);

    //c.arc(A.pos.x, A.pos.y, 5, 0, 2*Math.PI);
    //c.arc(B.pos.x, B.pos.y, 5, 0, 2*Math.PI);

    c.fillStyle = grd;
    c.fill();
  

    // //Text informatics
    // c.font = '20px sans-serif';
    // var H = 25;
    // var stringA = "A: ("+A.pos.x+", "+A.pos.y+")   ";
    // c.fillStyle="red";
    // c.fillText(stringA,5,H);

    // var stringB = "B: ("+B.pos.x+", "+B.pos.y+")   ";
    // c.fillStyle="green";
    // c.fillText(stringB,140,H);

    // var stringC = "C: ("+C.pos.x+", "+C.pos.y+")   ";
    // c.fillStyle="blue";
    // c.fillText(stringC,290,H);
    // c.fillStyle="slateGray";
    // H+=25;
    
    // c.fillText("Area: "+area+"    Perimeter: "+Math.round(perimeter*100)/100,5,H);
    // H+=30; 

    // c.fillStyle="orange";
    // c.fillText("•AB: ("+Math.round(AB.x)+", "+Math.round(AB.y)+")    Length: "+Math.round(AB.dist*100)/100,5,H);
    // c.fillStyle="cyan";
    // H+=20;
    // c.fillText("•BC: ("+Math.round(BC.x)+", "+Math.round(BC.y)+")    Length: "+Math.round(BC.dist*100)/100,5,H);
    // c.fillStyle="magenta";
    // H+=20;
    // c.fillText("•CA: ("+Math.round(CA.x)+", "+Math.round(CA.y)+")    Length: "+Math.round(CA.dist*100)/100,5,H);
    // c.fillStyle="darkgoldenrod";
    // H+=30;
    // c.fillText("Centroid: ("+Math.round(center.x)+", "+Math.round(center.y)+")",5,H);
    // H+=20;
    // c.fillText("Altitude BC: "+Math.round(center.A*100)/100,5,H);
    // H+=20;
    // c.fillText("Altitude CA: "+Math.round(center.B*100)/100,5,H);
    // H+=20;
    // c.fillText("Altitude AB: "+Math.round(center.C*100)/100,5,H);
    // c.fillStyle="orange";
    // H+=30;
    // c.fillText("Circumcenter: ("+Math.round(circumcenter.x)+", "+Math.round(circumcenter.y)+")",5,H);
    // H+=20;
    // c.fillText("Circumcircle radius: "+Math.round(100*circumcenter.radius)/100,5,H);
    // H+=30;
    // c.fillStyle="slateGray";
    // var AP = (Math.round((area/perimeter)/((AB.dist+BC.dist+CA.dist)/3)*100000)/100000);
    // c.fillText("Area/Perimeter: "+AP,5,H);
    // H+=20;
    // c.fillText("Ideal A/P Ratio: "+0.14434,5,H);
    // H+=20;
    // c.fillText("Deviation: "+Math.round(1000*Math.abs(AP-0.14434)/0.14434)/10+"%",5,H);
    // H+=30;
    // c.fillStyle="slateGray";
    // c.fillText("Max radius: "+maxRadius,5,H);
    // c.fillStyle="red";
    // H+=20;
    // c.fillText("A radius: "+Math.round(100*center.A)/100,5,H);
    // c.fillStyle="green";
    // H+=20;
    // c.fillText("B radius: "+Math.round(100*center.B)/100,5,H);
    // c.fillStyle="blue";
    // H+=20;
    // c.fillText("C radius: "+Math.round(100*center.C)/100,5,H);    
    // c.fillStyle="red";
    // H+=30;
    // c.fillText("A alpha: "+Math.round(100*alphaA)/100,5,H);
    // c.fillStyle="green";
    // H+=20;
    // c.fillText("B alpha: "+Math.round(100*alphaB)/100,5,H);
    // c.fillStyle="blue";
    // H+=20;
    // c.fillText("C alpha: "+Math.round(100*alphaC)/100,5,H);
    // c.fillStyle="slateGray";
    // c.fillText("Double click to equilateralize",5,window.innerHeight-5);
}
